cabal-version: 2.2
name: marlowe
version: 0.1.0.3
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
build-type: Simple
maintainer: alexander.nemish@iohk.io
stability: experimental
author: Alexander Nemish
synopsis:
  Marlowe: financial contracts on Cardano Computation Layer
description:
  A reference implementation of Marlowe, domain-specific language targeted at
  the execution of financial contracts in the style of Peyton Jones et al
  on Cardano Computation Layer.
category: Language
extra-doc-files: README.md

source-repository head
  type: git
  location: https://github.com/input-output-hk/marlowe-cardano

flag defer-plugin-errors
    description:
        Defer errors from the plugin, useful for things like Haddock that can't handle it.
    default: False
    manual: True

common lang
  default-language: Haskell2010
  default-extensions: ExplicitForAll ScopedTypeVariables
                      DeriveGeneric StandaloneDeriving DeriveLift
                      DeriveFunctor DeriveFoldable
                      DeriveTraversable
  ghc-options:
    -Wall -Wnoncanonical-monad-instances
    -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities
    -Wunused-packages

library
  import: lang
  hs-source-dirs: src

  if !(impl(ghcjs) || os(ghcjs))
    build-depends: plutus-tx-plugin -any

  build-depends:
    base,
    aeson <2,
    base16-aeson,
    base16-bytestring,
    bech32,
    bytestring,
    containers,
    deriving-aeson,
    mtl,
    newtype-generics,
    ordered-containers,
    plutus-ledger-ada,
    plutus-ledger-api,
    plutus-ledger-slot,
    plutus-script-utils,
    plutus-tx,
    sbv >=8.4,
    scientific,
    serialise,
    template-haskell,
    text,
    wl-pprint,

  exposed-modules:
    Language.Marlowe
    Language.Marlowe.Extended.V1
    Language.Marlowe.Extended.V1.Metadata.Types
    Language.Marlowe.Core.V1.Semantics
    Language.Marlowe.Core.V1.Semantics.Types
    Language.Marlowe.Core.V1.Semantics.Types.Address
    Language.Marlowe.FindInputs
    Language.Marlowe.Client
    Language.Marlowe.Client.History
    Language.Marlowe.Util
    Language.Marlowe.ParserUtil
    Language.Marlowe.Scripts
    Language.Marlowe.Pretty
    Language.Marlowe.Analysis.FSSemantics
    Plutus.Debug


flag limit-static-analysis-time
  description:
    This flag sets the timeout seconds for static analysis testing of arbitrary
    contracts, which can take so much time on a complex contract that it exceeds
    hydra/CI resource limits, see SCP-4267.
  default: True


test-suite marlowe-test
    import: lang
    hs-source-dirs: test

    if flag(limit-static-analysis-time)
      cpp-options: -DSTATIC_ANALYSIS_TIMEOUT=180

    if flag(defer-plugin-errors)
      ghc-options: -fplugin-opt PlutusTx.Plugin:defer-errors

    type: exitcode-stdio-1.0
    main-is: Spec.hs

    other-modules:
        Spec.Marlowe.Common
        Spec.Marlowe.Marlowe
        Spec.Marlowe.Semantics
        Spec.Marlowe.Plutus
        Spec.Marlowe.Plutus.Arbitrary
        Spec.Marlowe.Plutus.AssocMap
        Spec.Marlowe.Plutus.Lens
        Spec.Marlowe.Plutus.Prelude
        Spec.Marlowe.Plutus.Script
        Spec.Marlowe.Plutus.ScriptContext
        Spec.Marlowe.Plutus.Specification
        Spec.Marlowe.Plutus.Transaction
        Spec.Marlowe.Plutus.Types
        Spec.Marlowe.Plutus.Value
        Spec.Marlowe.Serialization
        Spec.Marlowe.Serialization.CoreJson
        Spec.Marlowe.Serialization.ExtendedJson
        Spec.Marlowe.Semantics.Arbitrary
        Spec.Marlowe.Semantics.AssocMap
        Spec.Marlowe.Semantics.Compute
        Spec.Marlowe.Semantics.Entropy
        Spec.Marlowe.Semantics.Functions
        Spec.Marlowe.Semantics.Golden
        Spec.Marlowe.Semantics.Golden.Escrow
        Spec.Marlowe.Semantics.Golden.Pangram
        Spec.Marlowe.Semantics.Golden.Swap
        Spec.Marlowe.Semantics.Golden.Trivial
        Spec.Marlowe.Semantics.Golden.ZeroCouponBond
        Spec.Marlowe.Semantics.Orphans
        Spec.Marlowe.Semantics.Util

    build-depends:
        base >=4.9 && <5,
        aeson,
        bytestring,
        cardano-api,
        containers,
        data-default,
        hint,
        lens,
        marlowe,
        mtl,
        plutus-ledger,
        plutus-ledger-api,
        plutus-ledger-slot,
        plutus-script-utils,
        plutus-tx,
        QuickCheck,
        quickcheck-instances,
        serialise,
        tasty,
        tasty-hunit,
        tasty-quickcheck,
        text,
        these,
        filepath,
